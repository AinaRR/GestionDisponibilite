// <auto-generated />
using System;
using GestionDisponibilite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionDisponibilite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250519143414_UpdateJwtKey")]
    partial class UpdateJwtKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionDisponibilite.Model.Employe", b =>
                {
                    b.Property<Guid>("EmployeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DateDeNaissance")
                        .HasColumnType("date");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SurProjet")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeId");

                    b.ToTable("Employes");

                    b.HasData(
                        new
                        {
                            EmployeId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Adresse = "",
                            DateDeNaissance = new DateOnly(1, 1, 1),
                            Degree = "",
                            Email = "admin@example.com",
                            Nom = "Admin",
                            PasswordHash = "$argon2id$v=19$m=65536,t=3,p=1$da7YgjEXCLmxQ258xLuyHA$BVTvhrpu8jWJt4H5BYilCaqIPMwIAt4y2xn+44Z6urg",
                            Prenom = "Root",
                            Role = "Admin",
                            SurProjet = false,
                            Telephone = "",
                            Username = "adminuser"
                        },
                        new
                        {
                            EmployeId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Adresse = "",
                            DateDeNaissance = new DateOnly(1, 1, 1),
                            Degree = "",
                            Email = "user@example.com",
                            Nom = "User",
                            PasswordHash = "$argon2id$v=19$m=65536,t=3,p=1$J+EZTnIFqFnXOs0/HIaFSQ$+T8AE6mc1g4VE1ScQMHOWrw33/RUiIEaC86f/XKv1mw",
                            Prenom = "Normal",
                            Role = "User",
                            SurProjet = false,
                            Telephone = "",
                            Username = "normaluser"
                        });
                });

            modelBuilder.Entity("GestionDisponibilite.Model.EmployeProjet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.HasIndex("ProjetId");

                    b.ToTable("EmployeProjets");
                });

            modelBuilder.Entity("GestionDisponibilite.Model.EmployeRole", b =>
                {
                    b.Property<Guid>("EmployeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeRoles");

                    b.HasData(
                        new
                        {
                            EmployeId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            EmployeId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("GestionDisponibilite.Model.Projet", b =>
                {
                    b.Property<Guid>("ProjetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DebutProjet")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FinProjet")
                        .HasColumnType("date");

                    b.Property<string>("NomDuProjet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjetId");

                    b.ToTable("Projets");
                });

            modelBuilder.Entity("GestionDisponibilite.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("GestionDisponibilite.Model.EmployeProjet", b =>
                {
                    b.HasOne("GestionDisponibilite.Model.Employe", "Employe")
                        .WithMany("EmployeProjets")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionDisponibilite.Model.Projet", "Projet")
                        .WithMany("EmployeProjets")
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("GestionDisponibilite.Model.EmployeRole", b =>
                {
                    b.HasOne("GestionDisponibilite.Model.Employe", "Employe")
                        .WithMany("EmployeRoles")
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionDisponibilite.Model.Role", "Role")
                        .WithMany("EmployeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GestionDisponibilite.Model.Employe", b =>
                {
                    b.Navigation("EmployeProjets");

                    b.Navigation("EmployeRoles");
                });

            modelBuilder.Entity("GestionDisponibilite.Model.Projet", b =>
                {
                    b.Navigation("EmployeProjets");
                });

            modelBuilder.Entity("GestionDisponibilite.Model.Role", b =>
                {
                    b.Navigation("EmployeRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
